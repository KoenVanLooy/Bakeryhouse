@model BakeryHouse.ViewModels.IndexProductModel

@{
    ViewData["Title"] = "Product-Index";
}
    <div class="container">
        <h1 class="col col-12 float-left">Index</h1>

        <p class="col col-12 float-left">
            <a asp-action="Create">Create New</a>
        </p>
        <form asp-action="Index" method="get">
                <div class="col col-5 float-left">
                    <label class="col col-4 float-left  mt-2 mx-0 px-1">Find by name:</label>
                    <input type="text" class=" form-control col col-8 float-left mx-0 px-1" id="SearchString" name="SearchString" value="@Model.CurrentFilter" />
                </div>
                <input class="col col-3 float-left btn btn-primary" type="submit" value="Search" /> 
                <a class="col col-3 float-left mt-2" asp-action="Index">Back to Full List</a>
        </form>
        <table class="table col col-12">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.NaamSortParm" asp-route-currentFilter="@Model.CurrentFilter">Naam</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.PrijsSortParm" asp-route-currentFilter="@Model.CurrentFilter">Prijs</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@Model.TypeSortParm" asp-route-currentFilter="@Model.CurrentFilter">Type</a>
                    </th>
                    <th> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (Product item in Model.paginaList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Naam)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Prijs)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>


        @{
            var prevDisabled = !Model.paginaList.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.paginaList.HasNextPage ? "disabled" : "";
        }
        <a asp-action="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageNumber="@(Model.paginaList.PageIndex - 1)"
           asp-route-currentFilter="@Model.CurrentFilter"
           class="btn btn-primary @prevDisabled"  >
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageNumber="@(Model.paginaList.PageIndex + 1)"
           asp-route-currentFilter="@Model.CurrentFilter"
           class="btn btn-primary @nextDisabled">
            Next
        </a>
    </div>